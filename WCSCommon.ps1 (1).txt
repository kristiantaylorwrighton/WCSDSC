
#This DSC Configuration is part of the group of Three incremental node Configuration that maintain 
#Operating System Configuration 
#Application install and configuration
#Harding of the servers and patch managent


##DSC Configuration Starts here with a configuration block

configuration WCSCommon{




   



        #Update package download settings
		# the command help deal with some some SSL issue
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
			
			#This command allow for large dsc downloads
            #winrm set winrm/config @{MaxEnvelopeSizekb="5120000"}
            
			$ErrorActionPreference="Continue"




            Import-DscResource -Module cChoco
            Import-DscResource –ModuleName xPSDesiredStateConfiguration
            #Import-DscResource –ModuleName PSDesiredStateConfiguration
            import-DscResource -modulename xWindowsUpdate
	Import-DscResource -ModuleName ComputerManagementDsc
     

           # This will pull a credenial that has been setup in azure automation credials
                        #$Cred = Get-AutomationPSCredential 'StoresDomainCred'

             

                       
                        
         # this configuration will target any machine where localhost will resolve
   Node localhost{

                LocalConfigurationManager{
                
                        ConfigurationModeFrequencyMins = 1440 ##not sure which one of these to use
                        RefreshFrequencyMins = 1440 ##not sure which one of these to use
        
                    }




                                            
                            # Disabled IP 6
                            xRegistry RegIPDisableIP6{
                                Ensure    = "Present" 
                                Key       = "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters"
                                ValueName = "DisabledComponents"
                                ValueData = "0x20"
                                ValueType = "Dword"
                                Hex = $true }



        # Install Chocolatey
                            cChocoInstaller InstallChoco
                            {
                                InstallDir = "C:\ProgramData\chocolatey"   #Note by default Chocolatey installs here C:\ProgramData\chocolatey so Im not sure if you need this 
                                
                            }

                            #Install chocolaye package notepad ++
                            cChocoPackageInstaller notepadplusplus
                            {
                                Name                 = 'notepadplusplus'
                                Ensure               = 'Present'
                                DependsOn            = '[cChocoInstaller]installChoco'
                            }


                            #Install 7zip using choco
                            cChocoPackageInstaller 7Zip
                            {
                                Name                 = '7Zip'
                                Ensure               = 'Present'
                                DependsOn            = '[cChocoInstaller]installChoco'
                            }
                            

                            xWindowsUpdateAgent WinUpdateSetting{
                                IsSingleInstance='yes'
                                UpdateNow=$true
                                Category=@('Security','Important')
                                Notifications='Disabled'
                                Source='MicrosoftUpdate'
                            }

# You can use this to pull an lcm script from a website

File getScript {
SourcePath = 'http://some.server.local/artifact/shared/a-file.zip'
DestinationPath = 'D:\development\DSC Test\export\a-file.zip'
Ensure = 'Present'
Type= 'File'

}


# will ceate a run once scheduled task that you can use to re run the lCm script
				
	ScheduledTask ScheduledTaskLCMUpdate
        {
            TaskName              = 'Test task Once'
            TaskPath              = '\MyTasks'
            ActionExecutable      = 'C:\windows\system32\WindowsPowerShell\v1.0\powershell.exe'
            ScheduleType          = 'Once'
            RepeatInterval        = '00:15:00'
            RepetitionDuration    = '08:00:00'
            ExecutionTimeLimit    = '00:00:00'
            ActionWorkingPath     = (Get-Location).Path
            Enable                = $true
            RandomDelay           = '01:00:00'
            DisallowHardTerminate = $true
            RunOnlyIfIdle         = $false
            Priority              = 9
            DependsOn = "[File]getScript"
        }
    }



                     




                    }



                                        
        }
                             


 #WCSCommon -ConfigurationData C:\WCSCommon.psd1

 

 
